#include "GraphicsScene.h"


GraphicsScene::GraphicsScene(QObject *parent) :
	QGraphicsScene(parent)
{
	//this->setBackgroundBrush(Qt::gray);
	m_graphicsPixmapItem = new QGraphicsPixmapItem();
	//QGraphicsPixmapItem item(pix);
	//addItem(&item);
	addItem(m_graphicsPixmapItem);
}

void GraphicsScene::wheelEvent(QGraphicsSceneWheelEvent *wheelEvent)
{
	//this->setBackgroundBrush(Qt::red);

	//QGraphicsScene::wheelEvent(wheelEvent); // kell-e ez nekem?
	//m_graphicsPixmapItem->setPixmap(QPixmap("C:/Users/balaz/Desktop/poker/pk.jpg"));
	RaycastFromCameraPos(QVector3D(120.0, 120.0, 120.0));
}

void GraphicsScene::SetScene(const SceneData &sceneData)
{
	// Init with camera position, viewed posisiton, field of view
	rayCastScene.Init(sceneData.cameraPositionData, sceneData.viewedPosisitonData, sceneData.fieldOfViewData);
	rayCastScene.SetLimits(sceneData.extentData);
	rayCastScene.m_densityFunc = sceneData.functionData;
}

void GraphicsScene::Raycast() 
{
	//Raycast scene
	rayCastScene.Raycast();
	const std::vector<unsigned char> rgbData = rayCastScene.GetRGBData();

	const uchar* pixDataRGB = &rgbData[0];
	QImage img(pixDataRGB, 400, 300, 400 * 3, QImage::Format_RGB888); // 2 pixels width, 2 pixels height, 6 bytes per line, RGB888 format
																	  //QImage scaled = img.scaled(400, 300); // Scale image to show results better
	QPixmap pix = QPixmap::fromImage(img); // Create pixmap from image
	m_graphicsPixmapItem->setPixmap(pix);
	//m_graphicsPixmapItem = new QGraphicsPixmapItem(pix);
	//QGraphicsPixmapItem item(pix);
	//addItem(&item);
	//addItem(m_graphicsPixmapItem);
}

void GraphicsScene::RaycastFromCameraPos(const QVector3D &cameraPosition)
{
	rayCastScene.m_camera.m_position = cameraPosition;
	Raycast();
}

