#include "qtfirst.h"
#include <QtWidgets/QApplication>
#include <QtWidgets/QGraphicsScene>
#include <QtWidgets/QGraphicsView>
#include <QtWidgets/QGraphicsPixmapItem>
#include <fstream>
#include <sstream>


int main(int argc, char *argv[])
{
	

	QApplication a(argc, argv);
	QGraphicsScene scene;
	QGraphicsView view(&scene);
	//uchar pixDataRGB[] = { 255, 0, 0, 0, 0, 255, 0, 0, 255, 255, 0, 0 }; // Red, Blue, Red, Blue
	std::ifstream ifsData("C:/Users/balaz/Desktop/VR_Repowc/trunk/VolumeRenderer/rgb_uc.txt");
	std::string str(static_cast<std::stringstream const&>(std::stringstream() << ifsData.rdbuf()).str());
	std::vector<uchar> v(str.begin(), str.end());
	uchar* pixDataRGB = &v[0];
	//QImage img(pixDataRGB, 2, 2, 6, QImage::Format_RGB888); // 2 pixels width, 2 pixels height, 6 bytes per line, RGB888 format
	QImage img(pixDataRGB, 400, 300, 400*3, QImage::Format_RGB888); // 2 pixels width, 2 pixels height, 6 bytes per line, RGB888 format
	QImage scaled = img.scaled(400, 300); // Scale image to show results better
	QPixmap pix = QPixmap::fromImage(scaled); // Create pixmap from image
	QGraphicsPixmapItem item(pix);
	scene.addItem(&item);
	view.show();
	return a.exec();
	return 0;
}
